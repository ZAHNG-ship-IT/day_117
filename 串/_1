#include <stdio.h>
//字符串的匹配朴素算法以及kmp算法
#include <string.h> 
#include <stdlib.h>


//朴素算法
int index1(char* s,char* t){
    int i=0;
    int j=0;
    while(i<strlen(s)&&j<strlen(t)){
        if(s[i]==t[j]){
            i++;
            j++;
        }else{
            i=i-j+1;
            j=0;
        }
    }
    if(j==strlen(t)){
        return i-j;
    }else{
        return -1;
    }
}

//朴素算法
int index2(char* s,char* t){
    int i=0;
    int j=0;
    while(i<strlen(s)&&j<strlen(t)){
        if(s[i]==t[j]){
            i++;
            j++;
        }else{
            i=i-j+1;
            j=0;
        }
    }
    if(j==strlen(t)){
        return i-j;
    }else{
        return -1;
    }
}
//kmp算法优化
void get_next(char* t,int* next){
    int j=0;
    int k=-1;
    next[0]=-1;
    while(j<strlen(t)-1){
        if(k==-1||t[j]==t[k]){
            j++;
            k++;
            if(t[j]!=t[k]){
                next[j]=k;
            }else{
                next[j]=next[k];
            }
        }else{
            k=next[k];
        }
    }
}